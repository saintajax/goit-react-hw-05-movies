{"version":3,"file":"static/js/379.7767ff31.chunk.js","mappings":"+SAGaA,GAAQC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,4PAgBLE,GAAaF,EAAAA,EAAAA,SAAOG,EAAAA,GAAPH,CAAH,2NAYVI,EAAYJ,EAAAA,QAAAA,OAAH,uP,kBC1BTK,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAO1B,OACE,+BACE,SAAC,KAAD,CAAQC,cAAe,CAAEC,MAAO,IAAMF,SARrB,SAAAG,GACfA,EAAOD,MAAME,QACfJ,EAASG,EAEZ,EAIG,UACE,SAACE,EAAA,EAAD,CAAKC,EAAG,EAAR,UACE,UAACV,EAAD,YACE,SAACE,EAAD,CAAWS,KAAK,SAAhB,UACE,SAAC,MAAD,OAEF,4BACE,SAACd,EAAD,CAAOe,KAAK,QAAQD,KAAK,OAAOE,YAAY,4BAOzD,EC1BYC,EAAOhB,EAAAA,QAAAA,GAAH,yJASJiB,EAAOjB,EAAAA,QAAAA,GAAH,2DAIJkB,EAASlB,EAAAA,QAAAA,IAAH,2DCuDnB,EAzDe,WACb,OAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAcF,EAAYG,IAAI,UAEpCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBT,GAAa,GADG,mBAGSU,EAAAA,EAAAA,IAAiBJ,GAH1B,OAGRK,EAHQ,OAIdb,EAAUa,GAJI,gDAMdC,QAAQC,IAAR,MANc,yBAQdb,GAAa,GARC,4EAAH,qDAWXM,GACFG,GAEH,GAAE,CAACH,IAMJ,OAAIP,GACK,wCAIP,UAACX,EAAA,EAAD,CAAK0B,QAAQ,OAAO,wBAAsB,MAAM,WAAS,OAAOC,GAAG,OAAnE,WACE,SAACjC,EAAD,CAAWC,SAVgB,SAAC,GAAe,IAAbE,EAAY,EAAZA,MAChCoB,EAAe,CAAEpB,MAAAA,GAClB,KASG,SAACG,EAAA,EAAD,WACE,SAACK,EAAD,UACGI,EAAOmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACzB,EAAD,WACE,UAAC,KAAD,CAAS0B,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMrB,GAArC,WACE,SAACN,EAAD,CACE4B,IAAG,6CAAwCJ,GAC3CK,IAAKN,KAEP,SAAC9B,EAAA,EAAD,CAAKqC,GAAG,IAAIC,EAAG,EAAGC,UAAU,OAAOtC,EAAG,EAAGuC,MAAM,QAA/C,SACGV,QAPID,EADD,SAehB,SAAC,KAAD,MAGL,C","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  width: 560px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchForm = styled(Form)`\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { Formik } from 'formik';\nimport { Input, SearchBtn, SearchForm } from './SearchBar.styled';\nimport { BsSearch } from 'react-icons/bs';\nimport { Box } from 'components/Box/Box';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const handleSubmit = values => {\n    if (values.query.trim()) {\n      onSubmit(values);\n    }\n  };\n\n  return (\n    <>\n      <Formik initialValues={{ query: '' }} onSubmit={handleSubmit}>\n        <Box p={2}>\n          <SearchForm>\n            <SearchBtn type=\"submit\">\n              <BsSearch />\n            </SearchBtn>\n            <label>\n              <Input name=\"query\" type=\"text\" placeholder=\"Serach movie \" />\n            </label>\n          </SearchForm>\n        </Box>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 20px;\n  padding: 0px;\n  margin: 0px;\n`;\n\nexport const Item = styled.li`\n  background-color: lightskyblue;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  display: block;\n`;\n","import { Box } from 'components/Box/Box';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { fetchMovieByName } from 'services';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { Item, List, Poster } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchParam, setSearchparam] = useSearchParams();\n  const searchQuery = searchParam.get('query');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchMovieByName(searchQuery);\n        setMovies(response);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (searchQuery) {\n      getMovies();\n    }\n  }, [searchQuery]);\n\n  const handleSerachFormSubmit = ({ query }) => {\n    setSearchparam({ query });\n  };\n\n  if (isLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <Box display=\"grid\" grid-template-columns=\"1fr\" grid-gap=\"16px\" pb=\"24px\">\n      <SearchBar onSubmit={handleSerachFormSubmit} />\n      <Box>\n        <List>\n          {movies.map(({ id, title, poster_path }) => (\n            <Item key={id}>\n              <NavLink to={`${id}`} state={{ from: location }}>\n                <Poster\n                  src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                  alt={title}\n                />\n                <Box as=\"p\" m={0} minHeight=\"40px\" p={3} color=\"black\">\n                  {title}\n                </Box>\n              </NavLink>\n            </Item>\n          ))}\n        </List>\n      </Box>\n      <Outlet />\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["Input","styled","Field","SearchForm","Form","SearchBtn","SearchBar","onSubmit","initialValues","query","values","trim","Box","p","type","name","placeholder","List","Item","Poster","useState","movies","setMovies","isLoading","setIsLoading","location","useLocation","useSearchParams","searchParam","setSearchparam","searchQuery","get","useEffect","getMovies","fetchMovieByName","response","console","log","display","pb","map","id","title","poster_path","to","state","from","src","alt","as","m","minHeight","color"],"sourceRoot":""}