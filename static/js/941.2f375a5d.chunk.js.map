{"version":3,"file":"static/js/941.2f375a5d.chunk.js","mappings":"wSAGaA,EAASC,EAAAA,QAAAA,IAAH,2CAINC,EAAQD,EAAAA,QAAAA,GAAH,+CAILE,EAAiBF,EAAAA,QAAAA,GAAH,+CAIdG,EAAOH,EAAAA,QAAAA,EAAH,+CAIJI,EAAOJ,EAAAA,QAAAA,GAAH,mHAQJK,EAAOL,EAAAA,QAAAA,GAAH,kFAKJM,GAAaN,EAAAA,EAAAA,SAAOO,EAAAA,GAAPP,CAAH,gK,SCqEvB,EAtFqB,WAAO,IAAD,MACzB,GAA0BQ,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,2FACfN,GAAa,GADE,mBAGUO,EAAAA,EAAAA,IAAeN,GAHzB,OAGPO,EAHO,OAIbV,EAASU,GAJI,gDAMbC,QAAQC,IAAR,MANa,yBAQbV,GAAa,GARA,4EAAH,qDAWVC,GACFK,GAEH,GAAE,CAACL,IAEJ,IASMU,EAAY,oBAAGR,EAASS,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,QAE7C,OAAId,GACK,yCAIP,iCACE,SAAC,KAAD,CAAMe,GAAIH,EAAV,mBACA,UAACI,EAAA,EAAD,CAAKC,QAAQ,OAAb,WACE,SAAC7B,EAAD,CACE8B,IAAG,yCAAoCpB,EAAMqB,aAC7CC,IAAKtB,EAAMuB,MACXC,MAAO,OAET,UAACN,EAAA,EAAD,CAAKO,EAAG,EAAR,WACE,SAACjC,EAAD,UAAQQ,EAAMuB,SACd,UAAC7B,EAAD,2BAEE,SAACwB,EAAA,EAAD,CAAKQ,GAAG,OAAOC,WAAW,MAA1B,mBACG3B,EAAM4B,oBADT,aACG,EAAoBC,QAAQ,SAGjC,SAACpC,EAAD,wBACA,SAACC,EAAD,UAAOM,EAAM8B,YACb,SAACrC,EAAD,sBACA,SAACC,EAAD,UAnCU,WAChB,GAAKM,EAAM+B,OAKX,OAFmB/B,EAAX+B,OACiBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACjBC,KAAK,IACvB,CA4BcC,YAGX,UAAClB,EAAA,EAAD,CACEmB,UAAU,kBACVC,aAAa,kBACbb,EAAG,EACHc,UAAU,SAJZ,oCAOE,UAAC5C,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAYoB,GAAE,OAAUF,MAAO,CAAEC,KAAMF,GAAvC,qBAIF,SAAClB,EAAD,WACE,SAACC,EAAD,CAAYoB,GAAE,UAAaF,MAAO,CAAEC,KAAMF,GAA1C,8BAMN,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDeteils.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Poster = styled.img`\n  display: block;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 10px 0;\n`;\n\nexport const SecondaryTitle = styled.h3`\n  margin: 0 0 10px 0;\n`;\n\nexport const Text = styled.p`\n  margin: 0 0 40px 0;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 10px 0 0 0;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 20px) / 2);\n  text-align: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  display: block;\n  width: 100%;\n  background-color: skyblue;\n  color: black;\n  border: 1px solid black;\n`;\n","import { Box } from 'components/Box/Box';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { fetchMovieById } from 'services';\nimport {\n  Item,\n  List,\n  Poster,\n  SecondaryTitle,\n  StyledLink,\n  Text,\n  Title,\n} from './MovieDeteils.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      getMovie();\n    }\n  }, [movieId]);\n\n  const getGenres = () => {\n    if (!movie.genres) {\n      return;\n    }\n    const { genres } = movie;\n    const genresStr = genres.map(genre => genre.name);\n    return genresStr.join(' ');\n  };\n\n  const prevLocation = location.state?.from ?? '/home';\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Link to={prevLocation}>Back</Link>\n      <Box display=\"flex\">\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n          width={300}\n        />\n        <Box p={4}>\n          <Title>{movie.title}</Title>\n          <Text>\n            User scores:\n            <Box as=\"span\" fontWeight=\"700\">\n              {movie.vote_average?.toFixed(1)}\n            </Box>\n          </Text>\n          <SecondaryTitle>Overview</SecondaryTitle>\n          <Text>{movie.overview}</Text>\n          <SecondaryTitle>Genres</SecondaryTitle>\n          <Text>{getGenres()}</Text>\n        </Box>\n      </Box>\n      <Box\n        borderTop=\"2px solid black\"\n        borderBottom=\"2px solid black\"\n        p={3}\n        textAlign=\"center\"\n      >\n        Additional information\n        <List>\n          <Item>\n            <StyledLink to={`cast`} state={{ from: prevLocation }}>\n              Cast\n            </StyledLink>\n          </Item>\n          <Item>\n            <StyledLink to={`reviews`} state={{ from: prevLocation }}>\n              Reviews\n            </StyledLink>\n          </Item>\n        </List>\n      </Box>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Poster","styled","Title","SecondaryTitle","Text","List","Item","StyledLink","Link","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","useEffect","getMovie","fetchMovieById","response","console","log","prevLocation","state","from","to","Box","display","src","poster_path","alt","title","width","p","as","fontWeight","vote_average","toFixed","overview","genres","map","genre","name","join","getGenres","borderTop","borderBottom","textAlign"],"sourceRoot":""}